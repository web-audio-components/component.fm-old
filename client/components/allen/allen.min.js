/*
 * allen - v0.1.1 - 2012-11-27
 * http://github.com/jsantell/allen
 * Copyright (c) 2012 Jordan Santell; Licensed MIT
 */

(function(){var e,t,n,r,i;r=this,e={getAudioContext:function(){var e;return this.context!=null?this.context:(e=r.AudioContext||r.webkitAudioContext||r.mozAudioContext,e?this.context=new e:null)},setAudioContext:function(e){if(this.isAudioContext(e))return this.context=e;throw new Error("setAudioContext only accepts an AudioContext object")},isAudioContext:function(e){return t(e,"AudioContext")},isAudioSource:function(e){return n(e,"AudioSourceNode")},isAudioNode:function(e){return n(e,"AudioNode")},isAudioDestination:function(e){return t(e,"AudioDestinationNode")},isRegularAudioNode:function(e){return this.isAudioNode(e)&&!this.isAudioDestination(e)&&!this.isAudioSource(e)},isAudioParam:function(e){return n(e,"AudioParam")},getBuffer:function(e,t,n){var r;return n==null&&(n=!0),r=new XMLHttpRequest,r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=t,n&&r.send(),r}},t=function(e,t){var n;return typeof e!="object"||!e?!1:(e!=null?(n=e.constructor)!=null?n.name:void 0:void 0)===t||i(e,t)},n=function(e,t){var n,r;if(typeof e!="object"||!e)return!1;n=Object.getPrototypeOf(e);while(n!==Object.getPrototypeOf({})){if((n!=null?(r=n.constructor)!=null?r.name:void 0:void 0)===t||i(n,""+t+"Prototype"))return!0;n=Object.getPrototypeOf(n)}return!1},i=function(e,t){return!!toString.call(e).match(new RegExp("^\\[object "+t+"\\]$"))},typeof exports=="object"?module.exports=e:typeof define=="function"&&define.amd?define(function(){return e}):r.allen=e}).call(this);